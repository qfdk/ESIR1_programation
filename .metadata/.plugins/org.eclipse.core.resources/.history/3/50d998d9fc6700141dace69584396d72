<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="zh">
<head>
<!-- Generated by javadoc (version 1.7.0_55) on Fri Nov 07 13:33:37 CET 2014 -->
<meta http-equiv="Content-Type" content="text/html" charset="UTF-8">
<title>RationnelSimple</title>
<meta name="date" content="2014-11-07">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="RationnelSimple";
    }
//-->
</script>
<noscript>
<div>您的浏览器已禁用 JavaScript。</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="跳过导航链接"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="导航">
<li><a href="../overview-summary.html">概览</a></li>
<li><a href="package-summary.html">程序包</a></li>
<li class="navBarCell1Rev">类</li>
<li><a href="class-use/RationnelSimple.html">使用</a></li>
<li><a href="package-tree.html">树</a></li>
<li><a href="../deprecated-list.html">已过时</a></li>
<li><a href="../index-files/index-1.html">索引</a></li>
<li><a href="../help-doc.html">帮助</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../rationnel/RationnelCouple.html" title="rationnel中的类"><span class="strong">上一个类</span></a></li>
<li><a href="../rationnel/TestUnitaireRationnelCouple.html" title="rationnel中的类"><span class="strong">下一个类</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?rationnel/RationnelSimple.html" target="_top">框架</a></li>
<li><a href="RationnelSimple.html" target="_top">无框架</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">所有类</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>概要:&nbsp;</li>
<li>嵌套&nbsp;|&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">方法</a></li>
</ul>
<ul class="subNavList">
<li>详细资料:&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">方法</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">rationnel</div>
<h2 title="类 RationnelSimple" class="title">类 RationnelSimple</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>rationnel.RationnelSimple</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>所有已实现的接口:</dt>
<dd>java.lang.Comparable&lt;<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&gt;, <a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">RationnelSimple</span>
extends java.lang.Object
implements <a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></pre>
<dl><dt><span class="strong">作者:</span></dt>
  <dd>qfdk Cree le 2014年10月21日</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>构造器概要</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="构造器概要表, 列表构造器和解释">
<caption><span>构造器</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">构造器和说明</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../rationnel/RationnelSimple.html#RationnelSimple(int)">RationnelSimple</a></strong>(int&nbsp;num)</code>
<div class="block">initialiser un rationnel à partir d'un entier : nb/1</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../rationnel/RationnelSimple.html#RationnelSimple(int, int)">RationnelSimple</a></strong>(int&nbsp;num,
               int&nbsp;den)</code>
<div class="block">initialiser un rationnel avec numerateur et dénominateur</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../rationnel/RationnelSimple.html#RationnelSimple(types.Rationnel)">RationnelSimple</a></strong>(<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;r)</code>
<div class="block">initialiser un rationnel à partir d'un autre</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>方法概要</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="方法概要表, 列表方法和解释">
<caption><span>方法</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">限定符和类型</th>
<th class="colLast" scope="col">方法和说明</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../rationnel/RationnelSimple.html#compareTo(types.Rationnel)">compareTo</a></strong>(<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;autre)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../rationnel/RationnelSimple.html#equals(types.Rationnel)">equals</a></strong>(<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;r)</code>
<div class="block">comparer (égalité) deux rationnels</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../rationnel/RationnelSimple.html#getDenominateur()">getDenominateur</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../rationnel/RationnelSimple.html#getNumerateur()">getNumerateur</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></td>
<td class="colLast"><code><strong><a href="../rationnel/RationnelSimple.html#inverse()">inverse</a></strong>()</code>
<div class="block">inverser le rationnel courant</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></td>
<td class="colLast"><code><strong><a href="../rationnel/RationnelSimple.html#somme(types.Rationnel)">somme</a></strong>(<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;r)</code>
<div class="block">additionner deux rationnels</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../rationnel/RationnelSimple.html#toString()">toString</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><strong><a href="../rationnel/RationnelSimple.html#valeur()">valeur</a></strong>()</code>
<div class="block">calculer la valeur réelle du rationnel courant</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>从类继承的方法&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>构造器详细资料</h3>
<a name="RationnelSimple(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>RationnelSimple</h4>
<pre>public&nbsp;RationnelSimple(int&nbsp;num)</pre>
<div class="block">initialiser un rationnel à partir d'un entier : nb/1</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>num</code> - : valeur du numérateur</dd></dl>
</li>
</ul>
<a name="RationnelSimple(int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>RationnelSimple</h4>
<pre>public&nbsp;RationnelSimple(int&nbsp;num,
               int&nbsp;den)</pre>
<div class="block">initialiser un rationnel avec numerateur et dénominateur</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>num</code> - : valeur du numérateur</dd><dd><code>den</code> - : valeur du dénominateur
  den != 0
  fraction irréductible et dénominateur > 0</dd></dl>
</li>
</ul>
<a name="RationnelSimple(types.Rationnel)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>RationnelSimple</h4>
<pre>public&nbsp;RationnelSimple(<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;r)</pre>
<div class="block">initialiser un rationnel à partir d'un autre</div>
<dl><dt><span class="strong">参数:</span></dt><dd><code>r</code> - : rationnel à dupliquer</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>方法详细资料</h3>
<a name="equals(types.Rationnel)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>equals</h4>
<pre>public&nbsp;boolean&nbsp;equals(<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;r)</pre>
<div class="block">comparer (égalité) deux rationnels</div>
<dl>
<dt><strong>指定者:</strong></dt>
<dd><code><a href="../types/Rationnel.html#equals(types.Rationnel)">equals</a></code>&nbsp;在接口中&nbsp;<code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></dd>
<dt><span class="strong">参数:</span></dt><dd><code>r</code> - : rationnel à comparer au rationnel courant</dd>
<dt><span class="strong">返回:</span></dt><dd>vrai si le rationnel courant est égal au rationnel paramètre</dd></dl>
</li>
</ul>
<a name="somme(types.Rationnel)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>somme</h4>
<pre>public&nbsp;<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;somme(<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;r)</pre>
<div class="block">additionner deux rationnels</div>
<dl>
<dt><strong>指定者:</strong></dt>
<dd><code><a href="../types/Rationnel.html#somme(types.Rationnel)">somme</a></code>&nbsp;在接口中&nbsp;<code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></dd>
<dt><span class="strong">参数:</span></dt><dd><code>r</code> - : rationnel à additionner avec le rationnel courant</dd>
<dt><span class="strong">返回:</span></dt><dd>nouveau Rationnel somme du rationnel courant et du rationnel
 paramètre</dd></dl>
</li>
</ul>
<a name="inverse()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>inverse</h4>
<pre>public&nbsp;<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;inverse()</pre>
<div class="block">inverser le rationnel courant</div>
<dl>
<dt><strong>指定者:</strong></dt>
<dd><code><a href="../types/Rationnel.html#inverse()">inverse</a></code>&nbsp;在接口中&nbsp;<code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></dd>
<dt><span class="strong">返回:</span></dt><dd>nouveau Rationnel inverse du rationnel courant</dd></dl>
</li>
</ul>
<a name="valeur()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>valeur</h4>
<pre>public&nbsp;double&nbsp;valeur()</pre>
<div class="block">calculer la valeur réelle du rationnel courant</div>
<dl>
<dt><strong>指定者:</strong></dt>
<dd><code><a href="../types/Rationnel.html#valeur()">valeur</a></code>&nbsp;在接口中&nbsp;<code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></dd>
<dt><span class="strong">返回:</span></dt><dd>valeur réelle du rationnel courant</dd></dl>
</li>
</ul>
<a name="getNumerateur()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumerateur</h4>
<pre>public&nbsp;int&nbsp;getNumerateur()</pre>
<dl>
<dt><strong>指定者:</strong></dt>
<dd><code><a href="../types/Rationnel.html#getNumerateur()">getNumerateur</a></code>&nbsp;在接口中&nbsp;<code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></dd>
</dl>
</li>
</ul>
<a name="getDenominateur()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDenominateur</h4>
<pre>public&nbsp;int&nbsp;getDenominateur()</pre>
<dl>
<dt><strong>指定者:</strong></dt>
<dd><code><a href="../types/Rationnel.html#getDenominateur()">getDenominateur</a></code>&nbsp;在接口中&nbsp;<code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></dd>
</dl>
</li>
</ul>
<a name="compareTo(types.Rationnel)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compareTo</h4>
<pre>public&nbsp;int&nbsp;compareTo(<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&nbsp;autre)</pre>
<dl>
<dt><strong>指定者:</strong></dt>
<dd><code>compareTo</code>&nbsp;在接口中&nbsp;<code>java.lang.Comparable&lt;<a href="../types/Rationnel.html" title="types中的接口">Rationnel</a>&gt;</code></dd>
<dt><strong>指定者:</strong></dt>
<dd><code><a href="../types/Rationnel.html#compareTo(types.Rationnel)">compareTo</a></code>&nbsp;在接口中&nbsp;<code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></dd>
</dl>
</li>
</ul>
<a name="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<dl>
<dt><strong>指定者:</strong></dt>
<dd><code><a href="../types/Rationnel.html#toString()">toString</a></code>&nbsp;在接口中&nbsp;<code><a href="../types/Rationnel.html" title="types中的接口">Rationnel</a></code></dd>
<dt><strong>覆盖:</strong></dt>
<dd><code>toString</code>&nbsp;在类中&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="strong">返回:</span></dt><dd>représentation affichable d'un rationnel</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="跳过导航链接"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="导航">
<li><a href="../overview-summary.html">概览</a></li>
<li><a href="package-summary.html">程序包</a></li>
<li class="navBarCell1Rev">类</li>
<li><a href="class-use/RationnelSimple.html">使用</a></li>
<li><a href="package-tree.html">树</a></li>
<li><a href="../deprecated-list.html">已过时</a></li>
<li><a href="../index-files/index-1.html">索引</a></li>
<li><a href="../help-doc.html">帮助</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../rationnel/RationnelCouple.html" title="rationnel中的类"><span class="strong">上一个类</span></a></li>
<li><a href="../rationnel/TestUnitaireRationnelCouple.html" title="rationnel中的类"><span class="strong">下一个类</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?rationnel/RationnelSimple.html" target="_top">框架</a></li>
<li><a href="RationnelSimple.html" target="_top">无框架</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">所有类</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>概要:&nbsp;</li>
<li>嵌套&nbsp;|&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">方法</a></li>
</ul>
<ul class="subNavList">
<li>详细资料:&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">方法</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
